{"version":3,"sources":["components/Square.js","calculateWinner.js","components/Board.js","components/Games.js","App.js","reportWebVitals.js","index.js"],"names":["SquareButton","styled","div","Square","value","onClick","calculateWinner","squares","x","y","countTotal","currentY","currentX","directionX","directionY","now","tempX","tempY","total","length","BoardRow","id","Board","handleClick","map","each","rowIndex","colIndex","Flex","Info","Wrapper","Games","status","square","i","row","j","push","desc","useState","history","xIsNext","stepNumber","winner","historyState","setHistoryState","slice","current","newSquares","JSON","parse","stringify","moves","step","move","jumpTo","winnerColor","concat","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.779b5120.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {useState} from 'react'\r\n// 傳物件\r\nconst SquareButton = styled.div`\r\n  background: #fff;\r\n  border: 1px solid gray;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  height: 34px;\r\n  width: 34px;\r\n  line-height: 34px;\r\n  padding: 0;\r\n  text-align: center;\r\n  margin: 0;\r\n  background: #917856;\r\n`\r\n\r\nconst Square = ({value, onClick}) => {\r\n  return (\r\n    <SquareButton onClick={onClick}>{value}</SquareButton>\r\n  )\r\n}\r\nexport default Square","export const calculateWinner = (squares, x, y) => {\r\n  return (\r\n    countTotal(squares, x, y, 1, 0) + countTotal(squares, x, y, -1, 0) >= 4||\r\n    countTotal(squares, x, y, 0, 1) + countTotal(squares, x, y,  0, -1) >= 4 ||\r\n    countTotal(squares, x, y, 1, 1) + countTotal(squares, x, y, -1, -1) >= 4 ||\r\n    countTotal(squares, x, y, 1, -1) + countTotal(squares, x, y, -1, 1) >= 4\r\n  )\r\n}\r\n\r\nfunction countTotal(squares ,currentY, currentX, directionX, directionY) {\r\n  let now = squares[currentY][currentX]\r\n  let tempX = currentX + directionX\r\n  let tempY = currentY + directionY\r\n  let total = 0\r\n  if (tempX < 0) return 0\r\n  if (tempY < 0) return 0\r\n  if (tempX > squares.length -1) return 0\r\n  if (tempY > squares.length -1 ) return 0\r\n  while (squares[tempY][tempX] === now) {\r\n    total ++\r\n    tempX += directionX\r\n    tempY += directionY\r\n    if (tempX < 0) return total\r\n    if (tempY < 0) return total\r\n    if (tempX > squares.length -1) return total\r\n    if (tempY > squares.length -1 ) return total\r\n  }\r\n  return total\r\n}\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Square from './Square.js'\r\nimport {calculateWinner} from '../calculateWinner.js'\r\nimport {useState} from 'react'\r\nconst Status = styled.div`\r\n  margin-bottom: 10px;\r\n`\r\nconst BoardRow = styled.div`\r\n  display: flex;\r\n`\r\n\r\nlet id = 1\r\nconst Board = ({squares, handleClick}) => {\r\n  const renderSquare = (y, x) => {\r\n    return <Square value={squares[y][x]} key={y +'.'+ x} onClick={() => {handleClick(y, x)}}/>\r\n  }\r\n  return (\r\n    <div>\r\n    {squares.map((each, rowIndex) => {\r\n      id ++\r\n      return (\r\n        <BoardRow key={id}>\r\n          {\r\n            squares.map((each, colIndex) => {\r\n              return renderSquare(rowIndex, colIndex)\r\n            })\r\n          }\r\n        </BoardRow>\r\n      )\r\n    })}\r\n    </div>\r\n  )\r\n}\r\nexport default Board","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Board from './Board.js'\r\nimport {useState} from 'react'\r\nimport {calculateWinner} from '../calculateWinner.js'\r\n\r\nconst Flex = styled.div`\r\n  display: flex\r\n`\r\nconst Info = styled.div`\r\n  margin-left : 20px;\r\n`\r\nconst Wrapper = styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Games = () => {\r\n  let status\r\n  const size = 19\r\n  let square = []\r\n  for (let i = 0; i < size; i++) {\r\n    let row = []\r\n    for (let j = 0; j < size; j++) {\r\n      row.push('')\r\n    }\r\n    square.push(row)\r\n  }\r\n  const [historyState, setHistoryState] = useState({history:[{squares: square}], xIsNext: true, stepNumber: 1, winner: null})\r\n  let history = historyState.history.slice(0, historyState.stepNumber + 1)\r\n  let current = history[history.length - 1]\r\n  let squares = current.squares.slice()\r\n  let newSquares = JSON.parse(JSON.stringify(squares))\r\n  const handleClick = (y, x) => {\r\n    if (squares[y][x] || historyState.winner) {\r\n      return\r\n    }\r\n    newSquares[y][x] = historyState.xIsNext ? '●' : 'o'\r\n    setHistoryState({\r\n      history: history.concat([{squares: newSquares}]) , \r\n      xIsNext: !historyState.xIsNext, \r\n      stepNumber: historyState.history.length, \r\n      winner: calculateWinner(newSquares, y, x), \r\n      winnerColor: newSquares[y][x]\r\n    })\r\n  }\r\n  const jumpTo = (step) => {\r\n    setHistoryState({...historyState, xIsNext: (step % 2) === 0 , stepNumber: step, winner: null})\r\n  }\r\n  let desc\r\n  const moves = history.map((step, move) => {\r\n     desc = move ? `go to move #${move}` : 'go to game start'\r\n     return (\r\n      <div key={move}>\r\n        <button onClick={() => jumpTo(move)}>{desc}</button>\r\n      </div>\r\n     )\r\n  })\r\n  if (historyState.winner) {\r\n    status = `winner is ${historyState.winnerColor}`\r\n  } else {\r\n    status = `next player ${historyState.xIsNext ? '●' : '○'}`\r\n  }\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <Flex>\r\n        <Board squares={current.squares} handleClick={handleClick}/>\r\n        <Info>\r\n          <div>{status}</div>\r\n          <div>{moves}</div>\r\n        </Info>\r\n        </Flex>\r\n      </Wrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Games","import './App.css'\r\nimport {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Games from './components/Games.js'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Games/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}